import{_ as i,c as a,o as t,a2 as p}from"./chunks/framework.Gmd0D3gy.js";const h="/assets/Pasted%20image%2020250214152652.edA1pii4.png",e="/assets/Pasted%20image%2020250214152639.DNEEEbH-.png",n="/assets/Pasted%20image%2020250214152715.BysbH25A.png",l="/assets/Pasted%20image%2020250214152727.DHl7zJgU.png",k="/assets/Pasted%20image%2020250214152738.Dzrjnz57.png",F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"杂项/存量档案识别流程.md","filePath":"杂项/存量档案识别流程.md"}'),r={name:"杂项/存量档案识别流程.md"};function d(o,s,E,c,g,_){return t(),a("div",null,s[0]||(s[0]=[p(`<h2 id="适用场景" tabindex="-1">适用场景 <a class="header-anchor" href="#适用场景" aria-label="Permalink to &quot;适用场景&quot;">​</a></h2><p>由于账户整合各个历史系统中的影像资料，对于自然人的证件正反存在理解上差异，导致历史数据中存在人像面为正面，国徽面为正面的历史数据。需要通过文件识别统一纠正。账户系统后续统称为 国徽面和人像面，不再做正反面的描述，防止歧义。</p><h2 id="数据筛选" tabindex="-1">数据筛选 <a class="header-anchor" href="#数据筛选" aria-label="Permalink to &quot;数据筛选&quot;">​</a></h2><p>在账户数据库中，执行以下sql语句，查询出所有结果，导出TSV文件，命名为 file_list.tsv，</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DETAIL_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> substr(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">file_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, instr(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">file_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       FILE_PATH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;path&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  from</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cf_match</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">t_client_business_dossiers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> where</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dossiers_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;110001&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    or</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dossiers_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;110002&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p><img src="`+h+`" alt=""></p><h2 id="文件导出" tabindex="-1">文件导出 <a class="header-anchor" href="#文件导出" aria-label="Permalink to &quot;文件导出&quot;">​</a></h2><p>上传 file_list.tsv 和 archive.sh 至文件存储的服务器，上传目标文件夹需要磁盘空间充足，方便文件提取。</p><p>赋予 archive.sh 执行权限，执行,运行完成后会生成压缩文件 archive.zip,将archive.zip 下载至 win 环境解压。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost unicenter]# chmod  +x  archive.sh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost unicenter]# ./archive.sh</span></span></code></pre></div><h2 id="处理识别数据" tabindex="-1">处理识别数据 <a class="header-anchor" href="#处理识别数据" aria-label="Permalink to &quot;处理识别数据&quot;">​</a></h2><p>运行 Umi-OCR.exe，选择批量OCR</p><p>按照图片设置</p><p><img src="`+e+'" alt=""></p><p>将解压的archive.zip 文件夹，拖入左侧，待加载完成后，开始任务。</p><p>注意：建议使用多核性能优的win机器，可以加快识别效率。</p><h2 id="更新档案数据" tabindex="-1">更新档案数据 <a class="header-anchor" href="#更新档案数据" aria-label="Permalink to &quot;更新档案数据&quot;">​</a></h2><p>识别完成后，找到识别结果的CSV 文件，将文件导入数据库，进行数据处理。</p><p>使用CF_MATCH.T_TEMP_OCR.sql 创建表</p><p>使用 plsql，工具&gt;文本导入器</p><p><img src="'+n+'" alt=""></p><p><img src="'+l+'" alt=""></p><p>检查导入的字段数据，确认无误后，注意中文乱码。操作导入，等待数据导入完成。</p><p><img src="'+k+'" alt=""></p><p>数据导入完成后，执行 识别结果处理.sql。</p><p>查看CF_MATCH.T_TEMP_OCR 中 dossiers_type 为空的数据，进行调整。</p><p>最后执行 客户数据处理.sql</p>',27)]))}const C=i(r,[["render",d]]);export{F as __pageData,C as default};
